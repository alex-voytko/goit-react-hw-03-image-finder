{"version":3,"sources":["components/Container/Container.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.js","components/ImageGalleryItem/ImageGalleryItem.js","services/gallery-api.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","App.js","index.js"],"names":["Container","children","className","Searchbar","state","query","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","resetInput","this","type","autocomplete","autofocus","placeholder","onChange","Component","ImageGallery","ImageGalleryItem","pics","onClick","map","largeImageURL","webformatURL","tags","id","src","alt","url","searchQuery","page","key","stuff","axios","get","then","response","data","hits","Button","fetch","App","color","height","width","timeout","modalRoot","document","querySelector","Modal","handleClose","target","onClose","onKey","e","code","console","log","window","addEventListener","removeEventListener","createPortal","pictures","isLoading","showModal","largeImg","error","openLargeImg","pic","dir","toggleModal","onChangeQuery","fetchPictures","galleryApi","preState","scrolling","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","prevStateModal","prevProps","prevState","shouldrenderLoadMoreBtn","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.45bb5b8f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = ({ children }) => {\r\n    return <div className=\"Container\">{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends Component {\r\n    static propTypes = {\r\n        onSubmit: PropTypes.func.isRequired,\r\n    };\r\n    state = {\r\n        query: '',\r\n    };\r\n    handleChange = event => {\r\n        this.setState({ query: event.currentTarget.value });\r\n    };\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.resetInput();\r\n    };\r\n    resetInput = () => {\r\n        this.setState({ query: '' });\r\n    };\r\n    render() {\r\n        const { query } = this.state;\r\n        const { handleChange, handleSubmit } = this;\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autocomplete=\"off\"\r\n                        autofocus\r\n                        placeholder=\"Search images and photos\"\r\n                        onChange={handleChange}\r\n                        value={query}\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ children }) => {\r\n    return <ul className=\"ImageGallery\">{children}</ul>;\r\n};\r\n\r\nImageGallery.propTypes = {\r\n    children: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ pics, onClick }) => {\r\n    return (\r\n        <>\r\n            {pics.map(({ largeImageURL, webformatURL, tags, id }) => (\r\n                <li className=\"ImageGalleryItem\" key={id}>\r\n                    <img\r\n                        src={webformatURL}\r\n                        alt={tags}\r\n                        className=\"ImageGalleryItem-image\"\r\n                        onClick={() => onClick({ largeImageURL })}\r\n                    />\r\n                </li>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n    pics: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import axios from 'axios';\r\n\r\nconst fetchPictures = ({\r\n    url = 'https://pixabay.com/api',\r\n    searchQuery = '',\r\n    page = 1,\r\n    key = '20635202-2c584497a9a1087bd3447b54e',\r\n    stuff = 'image_type=photo&orientation=horizontal&per_page=12',\r\n}) => {\r\n    return axios\r\n        .get(`${url}/?q=${searchQuery}&page=${page}&key=${key}&${stuff}`)\r\n        .then(response => response.data.hits);\r\n};\r\n\r\nexport default { fetchPictures };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ fetch }) => {\r\n    return (\r\n        <>\r\n            <button className=\"Button\" type=\"button\" onClick={fetch}>\r\n                Load more\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Loader\">\r\n                <Loader\r\n                    type=\"Rings\"\r\n                    color=\"#eca33c\"\r\n                    height={200}\r\n                    width={200}\r\n                    timeout={3000} //3 secs\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n    static propTypes = {\r\n        onClose: PropTypes.func.isRequired,\r\n        src: PropTypes.string.isRequired,\r\n        alt: PropTypes.string.isRequired,\r\n    };\r\n    componentDidMount() {\r\n        console.log('Modal ComponentDidMount');\r\n        window.addEventListener('keydown', this.onKey);\r\n    }\r\n    componentWillUnmount() {\r\n        console.log('Modal ComponentWillUnmount');\r\n        window.removeEventListener('keydown', this.onKey);\r\n    }\r\n    handleClose = event => {\r\n        if (event.target.className === 'Overlay') {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n    onKey = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n    render() {\r\n        const { handleClose } = this;\r\n        const { src, alt } = this.props;\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={handleClose}>\r\n                <div className=\"Modal\">\r\n                    <img src={src} alt={alt} />\r\n                </div>\r\n            </div>,\r\n            modalRoot,\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\nimport Container from './components/Container';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport ImageGalleryItem from './components/ImageGalleryItem';\nimport galleryApi from './services/gallery-api';\nimport Button from './components/Button';\nimport Loader from './components/Loader';\nimport Modal from './components/Modal';\n\nclass App extends Component {\n    state = {\n        pictures: [],\n        page: 1,\n        searchQuery: '',\n        isLoading: false,\n        showModal: false,\n        largeImg: '',\n        tags: '',\n        error: null,\n    };\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.searchQuery !== this.state.searchQuery) {\n            this.fetchPictures();\n        }\n    }\n    openLargeImg = pic => {\n        this.setState({\n            largeImg: pic.largeImageURL,\n        });\n        console.dir(pic.largeImageURL);\n        this.toggleModal();\n    };\n    onChangeQuery = ({ query }) => {\n        this.setState({\n            searchQuery: query,\n            page: 1,\n            pictures: [],\n            error: null,\n        });\n    };\n    fetchPictures = () => {\n        const { searchQuery, page } = this.state;\n        this.setState({ isLoading: true });\n        galleryApi\n            .fetchPictures({ searchQuery, page })\n            .then(\n                pics =>\n                    this.setState(preState => ({\n                        pictures: [...preState.pictures, ...pics],\n                        page: preState.page + 1,\n                    })),\n                this.scrolling(),\n            )\n            .catch(error => this.setState({ error }))\n            .finally(() => this.setState({ isLoading: false }));\n    };\n    scrolling = () => {\n        window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n        });\n    };\n    toggleModal = () => {\n        this.setState(prevStateModal => ({\n            showModal: !prevStateModal.showModal,\n        }));\n    };\n    render() {\n        const { pictures, isLoading, showModal, largeImg, tags, error } =\n            this.state;\n        const { onChangeQuery, fetchPictures, toggleModal, openLargeImg } =\n            this;\n        const shouldrenderLoadMoreBtn = pictures.length > 0;\n        return (\n            <>\n                <Container>\n                    {error && <h1>Oops... error 404</h1>}\n                    <Searchbar onSubmit={onChangeQuery} />\n                    <ImageGallery>\n                        <ImageGalleryItem\n                            pics={pictures}\n                            onClick={openLargeImg}\n                        />\n                    </ImageGallery>\n                    {isLoading && <Loader />}\n                    {shouldrenderLoadMoreBtn && (\n                        <Button fetch={fetchPictures} />\n                    )}\n                    {showModal && (\n                        <Modal\n                            onClose={toggleModal}\n                            src={largeImg}\n                            alt={tags}\n                        />\n                    )}\n                </Container>\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/main.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}